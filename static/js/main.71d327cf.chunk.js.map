{"version":3,"sources":["talita.png","components/Links/github.png","components/Links/linkedin.png","components/Links/insta.png","components/Titulo/index.js","components/Descricao/index.js","components/Links/index.js","components/Informacoes/index.js","components/Rodape/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Titulo","className","Descricao","Links","href","target","src","git","linkedin","insta","Informacoes","Rodape","App","foto","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,iPCQ5BC,G,MALA,kBACX,wBAAIC,UAAW,UAAf,qBCSWC,G,MAVG,WACd,OAEA,uBAAGD,UAAW,kBAAd,qD,wDCoBWE,EApBD,WACV,OACI,yBAAKF,UAAW,cAEZ,uBAAGG,KAAK,mCAAmCC,OAAO,UAC9C,yBAAKJ,UAAW,QAASK,IAAKC,OAGlC,uBAAGH,KAAK,wDAAwDC,OAAO,UACnE,yBAAKJ,UAAW,QAASK,IAAKE,OAGlC,uBAAGJ,KAAK,2CAA2CC,OAAO,UACtD,yBAAKJ,UAAW,QAASK,IAAKG,SCQ/BC,G,MAxBK,WAChB,OACI,6BACI,wBAAIT,UAAW,aAAf,WACI,wBAAIA,UAAW,oBAAf,iLAIA,wBAAIA,UAAW,oBAAf,qFAGA,wBAAIA,UAAW,oBAAf,mCAEI,uBAAGA,UAAW,QAASG,KAAM,wCAAyCC,OAAO,UAA7E,WAFJ,iDAKA,wBAAIJ,UAAW,oBAAf,kGCNDU,G,MAVA,WACX,OACI,yBAAKV,UAAW,UACZ,wBAAIA,UAAW,eAAf,kCCuBGW,EApBH,kBACV,6BACE,yBAAKX,UAAW,gBACd,yBAAKA,UAAW,gBACd,yBAAKK,IAAKO,IAAMZ,UAAW,WAE3B,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAGF,kBAAC,EAAD,SCTca,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.71d327cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/talita.fa61cc26.png\";","module.exports = __webpack_public_path__ + \"static/media/github.318728f6.png\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.fa52c1c9.png\";","module.exports = __webpack_public_path__ + \"static/media/insta.d2ad0db4.png\";","import React from 'react';\r\nimport './styles.css';\r\n\r\nconst Titulo = () => (\r\n    <h1 className={'titulo'}> Talita Galdino</h1>\r\n\r\n);\r\n\r\nexport default Titulo;","import React from 'react';\r\nimport './styles.css';\r\n\r\nconst Descricao = () => {\r\n    return(\r\n\r\n    <p className={'caixaDescricao'}> \r\n        Future software engineer always trying to learn\r\n    </p>\r\n    \r\n    );\r\n};\r\n\r\nexport default Descricao;","import React from 'react';\r\nimport './styles.css';\r\nimport git from './github.png'\r\nimport linkedin from './linkedin.png'\r\nimport insta from './insta.png'\r\n\r\nconst Links = () => {\r\n    return (\r\n        <div className={'caixaLinks'}>\r\n\r\n            <a href='https://github.com/talitagaldino' target=\"_blank\"> \r\n                <img className={'links'} src={git}></img>\r\n            </a>\r\n\r\n            <a href='https://www.linkedin.com/in/talita-galdino-1808101a7/' target=\"_blank\"> \r\n                <img className={'links'} src={linkedin}></img>   \r\n            </a>\r\n            \r\n            <a href='https://www.instagram.com/talita_galdino' target=\"_blank\"> \r\n                <img className={'links'} src={insta}></img>    \r\n            </a>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Links;\r\n","import React from 'react'; \r\nimport './styles.css';\r\n\r\nconst Informacoes = () =>{\r\n    return(\r\n        <div>\r\n            <h1 className={'subtitulo'}> About </h1>\r\n                <h1 className={'textoInformacoes'}>  \r\n                    My name is Talita Galdino, from Campina Grande, Brazil. I am a Computer Science undergraduate at Federal University of Campina Grande\r\n                    and I am currently in the fifth period.\r\n                </h1>\r\n                <h1 className={'textoInformacoes'}>\r\n                    I worked as a discipline monitor for programming language paradigms for a period.\r\n                </h1>\r\n                <h1 className={'textoInformacoes'}>\r\n                    For three months I worked on the \r\n                    <a className={'wywus'} href={'https://www.facebook.com/ProjetoWyWus'} target=\"_blank\"> Wywus </a>\r\n                    project in the development of an application.\r\n                </h1>\r\n                <h1 className={'textoInformacoes'}>\r\n                    I am interested in working with data analysis and learning even more about web development.\r\n                </h1>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Informacoes;","import React from 'react';\r\nimport './styles.css';\r\n\r\nconst Rodape = () => {\r\n    return(\r\n        <div className={'rodape'}>\r\n            <h3 className={'textoRodape'}>\r\n                Handcrafted by me Â© 2020\r\n            </h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rodape;","import React from 'react';\r\nimport './styles.css';\r\nimport foto from './talita.png';\r\nimport Titulo from './components/Titulo/index';\r\nimport Descricao from './components/Descricao';\r\nimport Links from './components/Links';\r\nimport Informacoes from './components/Informacoes';\r\nimport Rodape from './components/Rodape';\r\n\r\nconst App = () => (\r\n  <div>  \r\n    <div className={'caixaExterna'}>\r\n      <div className={'caixaInterna'}> \r\n        <img src={foto} className={'imagem'}></img>\r\n    \r\n        <Titulo />\r\n        <Descricao />\r\n        <Links />\r\n        <Informacoes />\r\n      </div>\r\n\r\n      <Rodape />\r\n      \r\n    </div>\r\n\r\n  </div>\r\n\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}